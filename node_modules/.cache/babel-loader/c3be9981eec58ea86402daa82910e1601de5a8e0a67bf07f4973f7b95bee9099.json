{"ast":null,"code":"var _jsxFileName = \"/Users/israelantoinereamarin/Documents/git/react-portfolio/src/components/background/DisplacementSphere.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useContext } from \"react\";\nimport classNames from \"classnames\";\nimport { Vector2, sRGBEncoding, WebGLRenderer, PerspectiveCamera, Scene, DirectionalLight, AmbientLight, UniformsUtils, UniformsLib, MeshPhongMaterial, SphereBufferGeometry, Mesh } from \"three\";\nimport { spring, value } from \"popmotion\";\nimport innerHeight from \"ios-inner-height\";\nimport vertShader from \"./sphereVertShader\";\nimport fragShader from \"./sphereFragShader\";\nimport { Transition } from \"react-transition-group\";\nimport { usePrefersReducedMotion } from \"../../hooks/usePrefersReducedMotion\";\nimport { useInViewport } from \"../../hooks/useInViewport\";\nimport { reflow } from \"../../utils/transition\";\nimport { media, rgbToThreeColor } from \"../../utils/style\";\nimport { cleanScene, removeLights, cleanRenderer } from \"../../utils/three\";\nimport \"./DisplacementSphere.css\";\nimport { ThemeContext } from \"../theme/ThemeProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DisplacementSphere = props => {\n  _s();\n  const {\n    theme\n  } = useContext(ThemeContext);\n  const rgbBackground = theme === \"light\" ? \"250 250 250\" : \"17 17 17\";\n  const width = useRef(window.innerWidth);\n  const height = useRef(window.innerHeight);\n  const start = useRef(Date.now());\n  const canvasRef = useRef();\n  const mouse = useRef();\n  const renderer = useRef();\n  const camera = useRef();\n  const scene = useRef();\n  const lights = useRef();\n  const uniforms = useRef();\n  const material = useRef();\n  const geometry = useRef();\n  const sphere = useRef();\n  const tweenRef = useRef();\n  const sphereSpring = useRef();\n  const prefersReducedMotion = Boolean(usePrefersReducedMotion() && false); //disabled until switching themes fixed\n  const isInViewport = useInViewport(canvasRef);\n  useEffect(() => {\n    mouse.current = new Vector2(0.8, 0.5);\n    renderer.current = new WebGLRenderer({\n      canvas: canvasRef.current,\n      powerPreference: \"high-performance\"\n    });\n    renderer.current.setSize(width.current, height.current);\n    renderer.current.setPixelRatio(1);\n    renderer.current.outputEncoding = sRGBEncoding;\n    camera.current = new PerspectiveCamera(55, width.current / height.current, 0.1, 200);\n    camera.current.position.z = 52;\n    scene.current = new Scene();\n    material.current = new MeshPhongMaterial();\n    material.current.onBeforeCompile = shader => {\n      uniforms.current = UniformsUtils.merge([UniformsLib[\"ambient\"], UniformsLib[\"lights\"], shader.uniforms, {\n        time: {\n          type: \"f\",\n          value: 0\n        }\n      }]);\n      shader.uniforms = uniforms.current;\n      shader.vertexShader = vertShader;\n      shader.fragmentShader = fragShader;\n      shader.lights = true;\n    };\n    geometry.current = new SphereBufferGeometry(32, 108, 128);\n    sphere.current = new Mesh(geometry.current, material.current);\n    sphere.current.position.z = 0;\n    sphere.current.modifier = Math.random();\n    scene.current.add(sphere.current);\n    return () => {\n      cleanScene(scene.current);\n      cleanRenderer(renderer.current);\n    };\n  }, []);\n  useEffect(() => {\n    const dirLight = new DirectionalLight(rgbToThreeColor(\"250 250 250\"), 0.6);\n    const ambientLight = new AmbientLight(rgbToThreeColor(\"250 250 250\"), theme === \"light\" ? 0.8 : 0.1);\n    dirLight.position.z = 200;\n    dirLight.position.x = 100;\n    dirLight.position.y = 100;\n    lights.current = [dirLight, ambientLight];\n    scene.current.background = rgbToThreeColor(rgbBackground);\n    lights.current.forEach(light => scene.current.add(light));\n    return () => {\n      removeLights(lights.current);\n    };\n  }, [rgbBackground, theme]);\n  useEffect(() => {\n    const handleResize = () => {\n      const canvasHeight = innerHeight();\n      const windowWidth = window.innerWidth;\n      const fullHeight = canvasHeight + canvasHeight * 0.3;\n      canvasRef.current.style.height = fullHeight;\n      renderer.current.setSize(windowWidth, fullHeight);\n      camera.current.aspect = windowWidth / fullHeight;\n      camera.current.updateProjectionMatrix();\n\n      // Render a single frame on resize when not animating\n      if (prefersReducedMotion) {\n        renderer.current.render(scene.current, camera.current);\n      }\n      if (windowWidth <= media.mobile) {\n        sphere.current.position.x = 14;\n        sphere.current.position.y = 10;\n      } else if (windowWidth <= media.tablet) {\n        sphere.current.position.x = 18;\n        sphere.current.position.y = 14;\n      } else {\n        sphere.current.position.x = 22;\n        sphere.current.position.y = 16;\n      }\n    };\n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, [prefersReducedMotion]);\n  useEffect(() => {\n    const onMouseMove = event => {\n      const {\n        rotation\n      } = sphere.current;\n      const position = {\n        x: event.clientX / window.innerWidth,\n        y: event.clientY / window.innerHeight\n      };\n      if (!sphereSpring.current) {\n        sphereSpring.current = value(rotation.toArray(), values => rotation.set(values[0], values[1], sphere.current.rotation.z));\n      }\n      tweenRef.current = spring({\n        from: sphereSpring.current.get(),\n        to: [position.y / 2, position.x / 2],\n        stiffness: 30,\n        damping: 20,\n        velocity: sphereSpring.current.getVelocity(),\n        mass: 2,\n        restSpeed: 0.0001\n      }).start(sphereSpring.current);\n    };\n    if (!prefersReducedMotion && isInViewport) {\n      window.addEventListener(\"mousemove\", onMouseMove);\n    }\n    return () => {\n      window.removeEventListener(\"mousemove\", onMouseMove);\n      if (tweenRef.current) {\n        tweenRef.current.stop();\n      }\n    };\n  }, [isInViewport, prefersReducedMotion]);\n  useEffect(() => {\n    let animation;\n    const animate = () => {\n      animation = requestAnimationFrame(animate);\n      if (uniforms.current !== undefined) {\n        uniforms.current.time.value = 0.00005 * (Date.now() - start.current);\n      }\n      sphere.current.rotation.z += 0.001;\n      renderer.current.render(scene.current, camera.current);\n    };\n    if (!prefersReducedMotion && isInViewport) {\n      animate();\n    } else {\n      renderer.current.render(scene.current, camera.current);\n    }\n    return () => {\n      cancelAnimationFrame(animation);\n    };\n  }, [isInViewport, prefersReducedMotion]);\n  return /*#__PURE__*/_jsxDEV(Transition, {\n    appear: true,\n    in: true,\n    onEnter: reflow,\n    timeout: 3000,\n    children: status => /*#__PURE__*/_jsxDEV(\"canvas\", {\n      \"aria-hidden\": true,\n      className: classNames(\"displacement-sphere\", `displacement-sphere--${status}`),\n      ref: canvasRef,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 9\n  }, this);\n};\n_s(DisplacementSphere, \"835L/JicW3yN5gvOXIURRj25CLU=\", false, function () {\n  return [usePrefersReducedMotion, useInViewport];\n});\n_c = DisplacementSphere;\nexport default DisplacementSphere;\nvar _c;\n$RefreshReg$(_c, \"DisplacementSphere\");","map":{"version":3,"names":["React","useEffect","useRef","useContext","classNames","Vector2","sRGBEncoding","WebGLRenderer","PerspectiveCamera","Scene","DirectionalLight","AmbientLight","UniformsUtils","UniformsLib","MeshPhongMaterial","SphereBufferGeometry","Mesh","spring","value","innerHeight","vertShader","fragShader","Transition","usePrefersReducedMotion","useInViewport","reflow","media","rgbToThreeColor","cleanScene","removeLights","cleanRenderer","ThemeContext","DisplacementSphere","props","theme","rgbBackground","width","window","innerWidth","height","start","Date","now","canvasRef","mouse","renderer","camera","scene","lights","uniforms","material","geometry","sphere","tweenRef","sphereSpring","prefersReducedMotion","Boolean","isInViewport","current","canvas","powerPreference","setSize","setPixelRatio","outputEncoding","position","z","onBeforeCompile","shader","merge","time","type","vertexShader","fragmentShader","modifier","Math","random","add","dirLight","ambientLight","x","y","background","forEach","light","handleResize","canvasHeight","windowWidth","fullHeight","style","aspect","updateProjectionMatrix","render","mobile","tablet","addEventListener","removeEventListener","onMouseMove","event","rotation","clientX","clientY","toArray","values","set","from","get","to","stiffness","damping","velocity","getVelocity","mass","restSpeed","stop","animation","animate","requestAnimationFrame","undefined","cancelAnimationFrame","status"],"sources":["/Users/israelantoinereamarin/Documents/git/react-portfolio/src/components/background/DisplacementSphere.js"],"sourcesContent":["import React, { useEffect, useRef, useContext } from \"react\";\nimport classNames from \"classnames\";\nimport {\n    Vector2,\n    sRGBEncoding,\n    WebGLRenderer,\n    PerspectiveCamera,\n    Scene,\n    DirectionalLight,\n    AmbientLight,\n    UniformsUtils,\n    UniformsLib,\n    MeshPhongMaterial,\n    SphereBufferGeometry,\n    Mesh,\n} from \"three\";\nimport { spring, value } from \"popmotion\";\nimport innerHeight from \"ios-inner-height\";\nimport vertShader from \"./sphereVertShader\";\nimport fragShader from \"./sphereFragShader\";\nimport { Transition } from \"react-transition-group\";\nimport { usePrefersReducedMotion } from \"../../hooks/usePrefersReducedMotion\";\nimport { useInViewport } from \"../../hooks/useInViewport\";\nimport { reflow } from \"../../utils/transition\";\nimport { media, rgbToThreeColor } from \"../../utils/style\";\nimport { cleanScene, removeLights, cleanRenderer } from \"../../utils/three\";\nimport \"./DisplacementSphere.css\";\nimport { ThemeContext } from \"../theme/ThemeProvider\";\n\nconst DisplacementSphere = (props) => {\n    const { theme } = useContext(ThemeContext);\n    const rgbBackground = theme === \"light\" ? \"250 250 250\" : \"17 17 17\";\n    const width = useRef(window.innerWidth);\n    const height = useRef(window.innerHeight);\n    const start = useRef(Date.now());\n    const canvasRef = useRef();\n    const mouse = useRef();\n    const renderer = useRef();\n    const camera = useRef();\n    const scene = useRef();\n    const lights = useRef();\n    const uniforms = useRef();\n    const material = useRef();\n    const geometry = useRef();\n    const sphere = useRef();\n    const tweenRef = useRef();\n    const sphereSpring = useRef();\n    const prefersReducedMotion = Boolean(usePrefersReducedMotion() && false); //disabled until switching themes fixed\n    const isInViewport = useInViewport(canvasRef);\n\n    useEffect(() => {\n        mouse.current = new Vector2(0.8, 0.5);\n        renderer.current = new WebGLRenderer({\n            canvas: canvasRef.current,\n            powerPreference: \"high-performance\",\n        });\n        renderer.current.setSize(width.current, height.current);\n        renderer.current.setPixelRatio(1);\n        renderer.current.outputEncoding = sRGBEncoding;\n\n        camera.current = new PerspectiveCamera(\n            55,\n            width.current / height.current,\n            0.1,\n            200\n        );\n        camera.current.position.z = 52;\n\n        scene.current = new Scene();\n\n        material.current = new MeshPhongMaterial();\n        material.current.onBeforeCompile = (shader) => {\n            uniforms.current = UniformsUtils.merge([\n                UniformsLib[\"ambient\"],\n                UniformsLib[\"lights\"],\n                shader.uniforms,\n                { time: { type: \"f\", value: 0 } },\n            ]);\n\n            shader.uniforms = uniforms.current;\n            shader.vertexShader = vertShader;\n            shader.fragmentShader = fragShader;\n            shader.lights = true;\n        };\n\n        geometry.current = new SphereBufferGeometry(32, 108, 128);\n\n        sphere.current = new Mesh(geometry.current, material.current);\n        sphere.current.position.z = 0;\n        sphere.current.modifier = Math.random();\n        scene.current.add(sphere.current);\n\n        return () => {\n            cleanScene(scene.current);\n            cleanRenderer(renderer.current);\n        };\n    }, []);\n\n    useEffect(() => {\n        const dirLight = new DirectionalLight(\n            rgbToThreeColor(\"250 250 250\"),\n            0.6\n        );\n        const ambientLight = new AmbientLight(\n            rgbToThreeColor(\"250 250 250\"),\n            theme === \"light\" ? 0.8 : 0.1\n        );\n\n        dirLight.position.z = 200;\n        dirLight.position.x = 100;\n        dirLight.position.y = 100;\n\n        lights.current = [dirLight, ambientLight];\n        scene.current.background = rgbToThreeColor(rgbBackground);\n        lights.current.forEach((light) => scene.current.add(light));\n\n        return () => {\n            removeLights(lights.current);\n        };\n    }, [rgbBackground, theme]);\n\n    useEffect(() => {\n        const handleResize = () => {\n            const canvasHeight = innerHeight();\n            const windowWidth = window.innerWidth;\n            const fullHeight = canvasHeight + canvasHeight * 0.3;\n            canvasRef.current.style.height = fullHeight;\n            renderer.current.setSize(windowWidth, fullHeight);\n            camera.current.aspect = windowWidth / fullHeight;\n            camera.current.updateProjectionMatrix();\n\n            // Render a single frame on resize when not animating\n            if (prefersReducedMotion) {\n                renderer.current.render(scene.current, camera.current);\n            }\n\n            if (windowWidth <= media.mobile) {\n                sphere.current.position.x = 14;\n                sphere.current.position.y = 10;\n            } else if (windowWidth <= media.tablet) {\n                sphere.current.position.x = 18;\n                sphere.current.position.y = 14;\n            } else {\n                sphere.current.position.x = 22;\n                sphere.current.position.y = 16;\n            }\n        };\n\n        window.addEventListener(\"resize\", handleResize);\n        handleResize();\n\n        return () => {\n            window.removeEventListener(\"resize\", handleResize);\n        };\n    }, [prefersReducedMotion]);\n\n    useEffect(() => {\n        const onMouseMove = (event) => {\n            const { rotation } = sphere.current;\n\n            const position = {\n                x: event.clientX / window.innerWidth,\n                y: event.clientY / window.innerHeight,\n            };\n\n            if (!sphereSpring.current) {\n                sphereSpring.current = value(rotation.toArray(), (values) =>\n                    rotation.set(\n                        values[0],\n                        values[1],\n                        sphere.current.rotation.z\n                    )\n                );\n            }\n\n            tweenRef.current = spring({\n                from: sphereSpring.current.get(),\n                to: [position.y / 2, position.x / 2],\n                stiffness: 30,\n                damping: 20,\n                velocity: sphereSpring.current.getVelocity(),\n                mass: 2,\n                restSpeed: 0.0001,\n            }).start(sphereSpring.current);\n        };\n\n        if (!prefersReducedMotion && isInViewport) {\n            window.addEventListener(\"mousemove\", onMouseMove);\n        }\n\n        return () => {\n            window.removeEventListener(\"mousemove\", onMouseMove);\n\n            if (tweenRef.current) {\n                tweenRef.current.stop();\n            }\n        };\n    }, [isInViewport, prefersReducedMotion]);\n\n    useEffect(() => {\n        let animation;\n\n        const animate = () => {\n            animation = requestAnimationFrame(animate);\n\n            if (uniforms.current !== undefined) {\n                uniforms.current.time.value =\n                    0.00005 * (Date.now() - start.current);\n            }\n\n            sphere.current.rotation.z += 0.001;\n            renderer.current.render(scene.current, camera.current);\n        };\n\n        if (!prefersReducedMotion && isInViewport) {\n            animate();\n        } else {\n            renderer.current.render(scene.current, camera.current);\n        }\n\n        return () => {\n            cancelAnimationFrame(animation);\n        };\n    }, [isInViewport, prefersReducedMotion]);\n\n    return (\n        <Transition appear in onEnter={reflow} timeout={3000}>\n            {(status) => (\n                <canvas\n                    aria-hidden\n                    className={classNames(\n                        \"displacement-sphere\",\n                        `displacement-sphere--${status}`\n                    )}\n                    ref={canvasRef}\n                    {...props}\n                />\n            )}\n        </Transition>\n    );\n};\n\nexport default DisplacementSphere;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}